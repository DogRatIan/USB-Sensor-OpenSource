//==========================================================================
// Showing debug message
//==========================================================================
#include <QDebug>

#include "debug.h"

//==========================================================================
//==========================================================================


//==========================================================================
// Initialize of debug mode
//==========================================================================
void DebugInit (void) {
}

//==========================================================================
// Exit of Debug
//==========================================================================
void DebugExit (void) {
}

//==========================================================================
// Show binary array in HEX string
//==========================================================================
void DebugHex2String (const unsigned char *aSrc, int aLen) {
    QString str = "[DEBUG]";

    for (int i = 0; i < aLen; i ++) {
        str.append (QString (" %1").arg (*aSrc, 2, 16, QChar('0')));
        aSrc ++;
    }
    qDebug () << str;
}

//==========================================================================
// Show binary array in HEX string
//==========================================================================
void DebugHex2String (const char *aSrc, int aLen) {
    QString str = "[DEBUG]";

    for (int i = 0; i < aLen; i ++) {
        str.append (QString (" %1").arg (*aSrc, 2, 16, QChar('0')));
        aSrc ++;
    }
    qDebug () << str;
}

//==========================================================================
// Format and show string
//==========================================================================
void DebugPrintf (const char *aMsg, ...) {
    QString str;

    va_list args;
    va_start (args, aMsg);
    str.vsprintf(aMsg, args);
    va_end (args);
    str.insert(0, "[DEBUG]");
    qDebug () << str;
}

